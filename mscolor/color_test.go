package mscolor

import (
	"math"
	"testing"
)

type Case struct {
	r uint8
	g uint8
	b uint8
	h int
	s float64
	v float64
}

// generated by photoshop
var tests = map[string]*Case{
	"#72b1c0": &Case{h: 192, s: 0.41, v: 0.75, r: 114, g: 177, b: 192},
	"#f06b66": &Case{h: 2, s: 0.58, v: 0.94, r: 240, g: 107, b: 102},
	"#7ba444": &Case{h: 86, s: 0.59, v: 0.64, r: 123, g: 164, b: 68},
	"#eaa21a": &Case{h: 39, s: 0.89, v: 0.92, r: 234, g: 162, b: 26},
	"#dc7b9a": &Case{h: 341, s: 0.44, v: 0.86, r: 220, g: 123, b: 154},
	"#747dc0": &Case{h: 233, s: 0.40, v: 0.75, r: 116, g: 125, b: 192},
	"#a38d89": &Case{h: 9, s: 0.16, v: 0.64, r: 163, g: 141, b: 137},
	"#d17a6a": &Case{h: 9, s: 0.49, v: 0.82, r: 209, g: 122, b: 106},
	"#9dc5cf": &Case{h: 192, s: 0.24, v: 0.81, r: 157, g: 197, b: 207},
	"#ffffff": &Case{h: 0, s: 0, v: 1, r: 255, g: 255, b: 255},
	"#000000": &Case{h: 0, s: 0, v: 0, r: 0, g: 0, b: 0},
}

func TestColor_MakeHSV(t *testing.T) {
	for k, src := range tests {
		c := &Color{R: src.r, G: src.g, B: src.b}
		c.MakeHSV()

		if c.H != src.h {
			t.Errorf("%v: Hue expected %v, actual %v", k, src.h, c.H)
		}

		if math.Pow(c.S-src.s, 2) > 0.01 {
			t.Errorf("%v: Saturation expected %v, actual %v", k, src.s, c.S)
		}

		if math.Pow(c.V-src.v, 2) > 0.01 {
			t.Errorf("%v: Brightness expected %v, actual %v", k, src.v, c.V)
		}
	}
}

func TestColor_String(t *testing.T) {
	c := &Color{R: 255, G: 255, B: 255}
	if c.String() != "#FFFFFF" {
		t.Errorf("expected #FFFFFF, actual %v", c.String())
	}
}
